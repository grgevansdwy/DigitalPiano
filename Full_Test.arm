// Developed by Victor Marcenac

// Expected Results: 			// (each worth 12 points)
// X0 = 123				// ADDI
// X1 = 2345				// ADDI (sign extended)
// X2 = 2020				// LDUR & STUR (worth 36 points)
// X3 = 3				// B
// X4 = 4				// CBZ
// X5 = -5				// SUBS
// X6 = 6				// ADDS
// X7 = 7				// B.LT
// X8 = 8				// BR
// X9 = 9				// BR (fwding)
// X10 = 10				// B.LT delay
// X11 = 11				// Not FWDing (instruction)
// X12 = 1012				// BL (12 for individual testing)
// X13 = 13				// FWDing
// X14 = 14				// Not FWDing (X31)

//		ADDI & ADDI (Sign Extend)
1001000100_000001111011_11111_00000	 //000: ADDI X0, X31, #123
1001000100_100100101001_11111_00001	 //004: ADDI X1, X31, #2345

//		STUR & LDUR
1001000100_000000001100_11111_10100	 //008: ADDI X20, X31, #12
1001000100_011111100100_11111_10110	 //012: ADDI X22, X31, #2020
1001000100_000000000100_10100_10101	 //016: ADDI X21, X20, #4
11111000000_000000100_00_10100_10110	 //020: STUR X22, [X20, #4]
11111000010_000000000_00_10101_00010	 //024: LDUR X2, [X21, #0]

//		B
1001000100_000000000000_11111_00011	 //028: ADDI X3, X31, #0
000101_00000000000000000000000011	 //032: B TAKEN (+3)
1001000100_000000000000_11111_11111	 //036: NOOP
1001000100_000110010001_00011_00011	 //040: ADDI X3, X3, #401
		// TAKEN:
1001000100_000000000011_00011_00011	 //044: ADDI X3, X3, #3

//		CBZ
1001000100_000000001100_11111_10100	 //048: ADDI X20, X31, #12
1001000100_000000000000_11111_00100	 //052: ADDI X4, X31, #0
10110100_0000000000000000100_10100	 //056: CBZ X20, CBZ_NOT_TAKEN (+4)
1001000100_000000000000_11111_11111	 //060: NOOP
10110100_0000000000000000011_00100	 //064: CBZ X4, CBZ_TAKEN (+3)
1001000100_000000000000_11111_11111	 //068: NOOP
		// CBZ_NOT_TAKEN:
1001000100_000110010000_00100_00100	 //072: ADDI X4, X4, #400
		// CBZ_TAKEN:
1001000100_000000000100_00100_00100	 //076: ADDI X4, X4, #4

//		SUBS, ADDS, B.LT (no delay)
1001000100_000000000000_11111_00101	 //080: ADDI X5, X31, #0
1001000100_000000000100_11111_00110	 //084: ADDI X6, X31, #4
1001000100_000000000000_11111_00111	 //088: ADDI X7, X31, #0
1001000100_000000000010_11111_10111	 //092: ADDI X23, X31, #2
1001000100_000000000111_11111_11000	 //096: ADDI X24, X31, #7
11101011000_11000_000000_10111_00101	 //100: SUBS X5, X23, X24
10101011000_00110_000000_10111_00110	 //104: ADDS X6, X23, X6
01010100_0000000000000000101_01011	 //108: B.LT BLT_NOT_TAKEN (+5)
1001000100_000000000000_11111_11111	 //112: NOOP
11101011000_11000_000000_10111_11111	 //116: SUBS X31, X23, X24
01010100_0000000000000000011_01011	 //120: B.LT BLT_TAKEN (+3)
1001000100_000000000000_11111_11111	 //124: NOOP
		// BLT_NOT_TAKEN:
1001000100_000110001110_00111_00111	 //128: ADDI X7, X7, #398
		// BLT_TAKEN:
1001000100_000000000111_00111_00111	 //132: ADDI X7, X7, #7

//		BR
1001000100_000010100100_11111_11110	 //136: ADDI X30, X31, #164
1001000100_000000000000_11111_01000	 //140: ADDI X8, X31, #0
1001000100_000000000000_11111_11111	 //144: NOOP
1001000100_000000000000_11111_11111	 //148: NOOP
11010110000_00000_000000_00000_11110	 //152: BR X30
1001000100_000000000000_11111_11111	 //156: NOOP
1001000100_000110001100_01000_01000	 //160: ADDI X8, X8, #396
		// BR_SUCCESS:
1001000100_000000001000_01000_01000	 //164: ADDI X8, X8, #8

//		BR (forwarding)
1001000100_000000000000_11111_01001	 //168: ADDI X9, X31, #0
1001000100_000010111100_11111_11110	 //172: ADDI X30, X31, #188
11010110000_00000_000000_00000_11110	 //176: BR X30
1001000100_000000000000_11111_11111	 //180: NOOP
1001000100_000110001011_01001_01001	 //184: ADDI X9, X9, #395
		// BR_FWD_SUCCESS:
1001000100_000000001001_01001_01001	 //188: ADDI X9, X9, #9

//		B.LT (with delay)
1001000100_000000000010_11111_11001	 //192: ADDI X25, X31, #2
1001000100_000000000111_11111_11010	 //196: ADDI X26, X31, #7
11101011000_11010_000000_11001_11011	 //200: SUBS X27, X25, X26
1001000100_000000000000_11111_11111	 //204: NOOP
1001000100_000000000000_11111_11111	 //208: NOOP
1001000100_000000000000_11111_01010	 //212: ADDI X10, X31, #0
01010100_0000000000000000011_01011	 //216: B.LT BLT_DELAY_TAKEN (+3)
1001000100_000000000000_11111_11111	 //220: NOOP
1001000100_000110001010_01010_01010	 //224: ADDI X10, X10, #394
		// BLT_DELAY_TAKEN:
1001000100_000000001010_01010_01010	 //228: ADDI X10, X10, #10

//		Not Forwarding (non-writing instruction)
1001000100_000000000011_11111_01011	 //232: ADDI X11, X31, #3
10101011000_01011_000000_11111_01011	 //236: ADDS X11, X31, X11
01010100_0000000000000000101_01011	 //240: B.LT PROP (+5)
1001000100_000000000100_01011_01011	 //244: ADDI X11, X11, #4
1001000100_000000000100_01011_01011	 //248: ADDI X11, X11, #4
1001000100_000000000000_11111_11111	 //252: NOOP
1001000100_000000000000_11111_11111	 //256: NOOP
		// PROP:
1001000100_000000000000_11111_11111	 //260: NOOP

//		BL
1001000100_001011100000_11111_01100	 //264: ADDI X12, X31, #736
1001000100_000000000000_11111_11111	 //268: NOOP
100101_00000000000000000000000011	 //272: BL BL_SUCCESS (+3)
1001000100_000000000000_11111_11111	 //276: NOOP
1001000100_000110001000_01100_01100	 //280: ADDI X12, X12, #392
		// BL_SUCCESS:
10101011000_01100_000000_11110_01100	 //284: ADDS X12, X30, X12

//		Forwarding
1001000100_000000000001_11111_01101	 //288: ADDI X13, X31, #1
1001000100_000000000010_01101_01101	 //292: ADDI X13, X13, #2
1001000100_000000000011_01101_01101	 //296: ADDI X13, X13, #3
1001000100_000000000100_01101_01101	 //300: ADDI X13, X13, #4
1001000100_000000000011_01101_01101	 //304: ADDI X13, X13, #3

//		Not Forwarding (31)
1001000100_000110000110_11111_11111	 //308: ADDI X31, X31, #390
1001000100_000110000110_11111_11111	 //312: ADDI X31, X31, #390
1001000100_000110000110_11111_11111	 //316: ADDI X31, X31, #390
1001000100_000110000110_11111_11111	 //320: ADDI X31, X31, #390
1001000100_000000001110_11111_01110	 //324: ADDI X14, X31, #14
		// END:
000101_00000000000000000000000000	 //328: B END (+0)
1001000100_000000000000_11111_11111	 //332: NOOP
